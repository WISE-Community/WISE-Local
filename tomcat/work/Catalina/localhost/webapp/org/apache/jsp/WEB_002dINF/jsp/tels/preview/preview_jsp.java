/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.32
 * Generated at: 2013-06-11 17:42:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.tels.preview;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class preview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jsp/tels/preview/../include.jsp", Long.valueOf(1357752796000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- \n");
      out.write(" * Copyright (c) 2013 Regents of the University of California (Regents). Created\n");
      out.write(" * by WISE, Graduate School of Education, University of California, Berkeley.\n");
      out.write(" *\n");
      out.write(" * This software is distributed under the GNU Lesser General Public License, v3,\n");
      out.write(" * or (at your option) any later version. To receive a copy of the GNU Lesser\n");
      out.write(" * General Public License, visit http://www.gnu.org/licenses/lgpl.html or write\n");
      out.write(" * to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n");
      out.write(" * Boston, MA 02110-1301 USA.\n");
      out.write(" *\n");
      out.write(" * Permission is hereby granted, without written agreement and without license\n");
      out.write(" * or royalty fees, to use, copy, modify, and distribute this software and its\n");
      out.write(" * documentation for any purpose, provided that the above copyright notice and\n");
      out.write(" * the following two paragraphs appear in all copies of this software.\n");
      out.write(" *\n");
      out.write(" * REGENTS SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n");
      out.write(" * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n");
      out.write(" * PURPOSE. THE SOFTWAREAND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDED\n");
      out.write(" * HEREUNDER IS PROVIDED \"AS IS\". REGENTS HAS NO OBLIGATION TO PROVIDE\n");
      out.write(" * MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n");
      out.write(" *\n");
      out.write(" * IN NO EVENT SHALL REGENTS BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,\n");
      out.write(" * SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,\n");
      out.write(" * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF\n");
      out.write(" * REGENTS HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- $Id$ -->");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html style=\"height:100%;\">\n");
      out.write("<head>\n");
      out.write("<title>WISE4</title>\n");
      out.write("\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\tfunction notifyFatal(type,args,obj){\n");
      out.write("\t\t\twindow.location = '/webapp/errors/outsideerror.html?msg=' + encodeURIComponent(args[0]);\n");
      out.write("\t\t}\n");
      out.write("\t\n");
      out.write("\t\tfunction startWithConfig() {\n");
      out.write("\t\t\tvar vleConfigUrl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vleConfigUrl}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\n");
      out.write("\t\t\twindow.frames['topifrm'].eventManager.subscribe('fatalError', notifyFatal);\n");
      out.write("\t\t\twindow.frames['topifrm'].view.startVLEFromConfig(vleConfigUrl);\n");
      out.write("\t\t}\n");
      out.write("\t</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("var contentUrl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contentUrl}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body style=\"height:100%; overflow-y:hidden; margin:0px;\">\n");
      out.write("<div id=\"wait\"></div> \n");
      out.write("<iframe id=\"topifrm\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vleurl}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("?loadScriptsIndividually=true\" name=\"topifrm\" scrolling=\"auto\"\n");
      out.write(" width=\"100%\" height=\"100%\" frameborder=\"0\">\n");
      out.write(" [Content for browsers that don't support iframes goes here.]\n");
      out.write("</iframe>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
